generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  createdAt     DateTime  @default(now())
  image         String?
  emailVerified DateTime?
  updatedAt     DateTime  @updatedAt
  lastBoard     String?
  password      String?
  accounts      Account[]
  ownedBoards   Board[]   @relation("BoardOwner")
  sessions      Session[]
  boards        Board[]   @relation("UserBoards")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Board {
  id      Int      @id @default(autoincrement())
  title   String
  ownerId String
  owner   User     @relation("BoardOwner", fields: [ownerId], references: [id])
  columns Column[]
  users   User[]   @relation("UserBoards")
}

model Column {
  id         Int    @id @default(autoincrement())
  title      String
  boardId    Int
  boardOrder Int
  cards      Card[]
  board      Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
}

model Card {
  id          Int      @id @default(autoincrement())
  title       String
  columnId    Int
  message     String   @default("")
  columnOrder Int
  deadline    DateTime?
  column      Column   @relation(fields: [columnId], references: [id], onDelete: Cascade)
}
